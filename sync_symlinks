#!/bin/bash

# Define locations
WORKSTATION_TESTS_PATH="/home/mk7641/storage/ACCESS/ProductionTests"
JUBAIL_HPC_TESTS_PATH="/scratch/mk7641/ProductionTests"
JUBAIL_HOST="mk7641@jubail.abudhabi.nyu.edu"

HPC_SYMLINK_PREFIX="/scratch/mk7641/croco_scripts/"
WORKSTATION_SYMLINK_PREFIX="/home/mk7641/storage/ACCESS/croco_scripts/"


# Function to extract project name from settings.yaml
extract_project_name() {
  local settings_file="$1"
  local root_dir
  root_dir=$(grep "root_dir:" "$settings_file" | awk -F'"' '{print $2}')
  
  if [[ -z "$root_dir" ]]; then
    echo "Error: Could not extract root_dir from $settings_file"
    exit 1
  fi

  echo "$(basename "$root_dir")"
}

get_root_dir() {
    local dir="$(pwd)"
    while [[ ! -f "$dir/settings.yaml" && "$dir" != "/" ]]; do
        dir=$(dirname "$dir")  # Move up one directory level
    done

    if [[ -f "$dir/settings.yaml" ]]; then
        echo "$dir"
    else
        echo "Error: settings.yaml not found in any parent directory."
        exit 1
    fi
}

SETTINGS_FILE=$(get_root_dir)/settings.yaml
SRC_PROJECT_NAME=$(extract_project_name "$SETTINGS_FILE")
WORKSTATION_PATH="$WORKSTATION_TESTS_PATH/$SRC_PROJECT_NAME"
JUBAIL_HPC_PATH="$JUBAIL_HPC_TESTS_PATH/$SRC_PROJECT_NAME"

echo "Source project name: $SRC_PROJECT_NAME"
echo "Workstation path: $WORKSTATION_PATH"
echo "Jubail HPC path: $JUBAIL_HPC_PATH"

update_remote_symlinks() {

  echo "Modifying symlinks in $JUBAIL_HPC_PATH/Tests on $JUBAIL_HOST..."

  ssh "$JUBAIL_HOST" "find \"$JUBAIL_HPC_PATH/Tests\" -type l -name '*.nc' -print0 | xargs -0 -I {} bash -c '
    SOURCE_PREFIX_REMOTE=\"'\\\"$WORKSTATION_SYMLINK_PREFIX\\\"'\";  # Properly escaped and quoted
    DEST_PREFIX_REMOTE=\"'\\\"$HPC_SYMLINK_PREFIX\\\"'\";    # Properly escaped and quoted
    target=\"\$(readlink {})\";

    if [[ \"\$target\" == \"\$SOURCE_PREFIX_REMOTE\"* ]]; then
      stripped_target=\"\${target#\$SOURCE_PREFIX_REMOTE}\";
      new_target=\"\$DEST_PREFIX_REMOTE\$stripped_target\";
      if [[ ! -e \"\$new_target\" ]]; then
        echo \"Warning: Target \$new_target does not exist!\"
      fi;
      ln -snf \"\$new_target\" \"{}\";
      if [[ ! -h \"{}\" ]]; then
        echo \"Warning: {} is not a symlink after update!\"
      fi;
    else
      stripped_target="\$target";
    fi

    '"

  # --- Update 'outputs' symlinks in subtests ---
  ssh "$JUBAIL_HOST" "find \"$JUBAIL_HPC_PATH/Tests\" -depth -name 'outputs' -type l -print0 | xargs -0 -I {} bash -c '
    SOURCE_PREFIX_REMOTE=\"'\\\"$WORKSTATION_TESTS_PATH\\\"'\";  # Properly escaped and quoted
    DEST_PREFIX_REMOTE=\"'\\\"$JUBAIL_HPC_TESTS_PATH\\\"'\";   # Properly escaped and quoted
    target=\"\$(readlink {})\";

    if [[ \"\$target\" == \"\$SOURCE_PREFIX_REMOTE\"* ]]; then
      stripped_target=\"\${target#\$SOURCE_PREFIX_REMOTE}\";
      echo \"Stripped target: \$stripped_target\";
      new_target=\"\$DEST_PREFIX_REMOTE\$stripped_target\";
      if [[ ! -e \"\$new_target\" ]]; then
        echo \"Warning: Target \$new_target does not exist!\"
      fi;
      ln -snf \"\$new_target\" \"{}\";
      if [[ ! -h \"{}\" ]]; then
        echo \"Warning: {} is not a symlink after update!\"
      fi;
    else
      stripped_target="\$target";
    fi

    '"

}

update_local_symlinks() {
  local source_path="$WORKSTATION_PATH/Tests" # Base path for tests
  local source_prefix="$HPC_SYMLINK_PREFIX" # Prefix to replace (source prefix - HPC)
  local dest_prefix="$WORKSTATION_SYMLINK_PREFIX"   # Prefix to replace with (destination prefix - Workstation)

  echo "Modifying symlinks in $source_path..."

  # --- Update .nc symlinks recursively ---
  find "$source_path" -type l -name '*.nc' -print0 | while IFS= read -r -d $'\0' symlink_path; do
    target=$(readlink "$symlink_path")

    if [[ "$target" == "$source_prefix"* ]]; then
      stripped_target="${target#$source_prefix}"
      new_target="$dest_prefix$stripped_target"
      ln -snf "$new_target" "$symlink_path"
    else
      stripped_target="$target";
    fi
  done

  local source_prefix="$JUBAIL_HPC_TESTS_PATH" # Prefix to replace (source prefix - HPC)
  local dest_prefix="$WORKSTATION_TESTS_PATH"   # Prefix to replace with (destination prefix - Workstation)

  # --- Update 'outputs' symlinks recursively - Simplified ---
  find "$source_path" -depth -name 'outputs' -type l -print0 | while IFS= read -r -d $'\0' symlink_path; do
    target=$(readlink "$symlink_path")


    if [[ "$target" == "$source_prefix"* ]]; then
      stripped_target="${target#$source_prefix}"
      new_target="$dest_prefix$stripped_target"
      ln -snf "$new_target" "$symlink_path"
    else
      stripped_target="$target";
    fi
  done
}

# if running as a script
if [ "${1}" != "--source-only" ]; then
  update_local_symlinks
  update_remote_symlinks
fi