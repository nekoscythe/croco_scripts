#!/bin/bash

QUIET=false

# Parse arguments
while [[ "$1" =~ ^- && ! "$1" == "--" ]]; do
    case $1 in
        -q | --quiet)
            QUIET=true
            ;;
    esac
    shift
done

# Ensure a branch name is provided
if [[ -z "$1" ]]; then
    [[ "$QUIET" == false ]] && echo "Error: Missing branch test name."
    exit 1
fi

BRANCH_TEST_NAME="$1"

# Function to get the root directory of the project by looking for settings.yaml
get_root_dir() {
    DIR="$(pwd)"
    while [[ ! -f "$DIR/settings.yaml" && "$DIR" != "/" ]]; do
        DIR=$(dirname "$DIR")
    done

    if [[ -f "$DIR/settings.yaml" ]]; then
        echo "$DIR"
    else
        [[ "$QUIET" == false ]] && echo "Error: Root directory not found."
        exit 1
    fi
}

# Function to add a branch (subtest)
add_branch() {
    if [[ ! "$BRANCH_TEST_NAME" =~ ^[a-zA-Z0-9_-]+$ ]]; then
        [[ "$QUIET" == false ]] && echo "Error: Invalid branch test name."
        exit 1
    fi

    if [[ ! -f "metadata.yaml" ]]; then
        [[ "$QUIET" == false ]] && echo "Error: No metadata.yaml file found."
        exit 1
    fi

    PARENT_TEST_NAME=$(yq eval '.test_name' metadata.yaml)
    PARENT_TEST_ID=$(yq eval '.test_id' metadata.yaml)
    if [[ -z "$PARENT_TEST_NAME" || -z "$PARENT_TEST_ID" ]]; then
        [[ "$QUIET" == false ]] && echo "Error: Could not find valid test_name or test_id."
        exit 1
    fi

    SUBTESTS_DIR="subtests"
    BRANCH_TEST_PATH="$SUBTESTS_DIR/$BRANCH_TEST_NAME"

    if [[ -d "$BRANCH_TEST_PATH" ]]; then
        [[ "$QUIET" == false ]] && echo "Error: Branch test already exists."
        exit 1
    fi

    EXISTING_SUBTESTS_COUNT=$(ls -1 "$SUBTESTS_DIR" 2>/dev/null | wc -l)

    echo "Creating branch test '$BRANCH_TEST_NAME' inside '$PARENT_TEST_NAME'."

    if [[ "$QUIET" == false ]]; then
        echo "Full path: $(pwd)/$BRANCH_TEST_PATH"
        read -p "Proceed? (y/n): " CONFIRM
        if [[ ! "$CONFIRM" =~ ^[Yy]$ ]]; then
            echo "Branch test creation aborted."
            exit 0
        fi
    fi

    mkdir -p "$BRANCH_TEST_PATH"
    rsync -a --exclude="$SUBTESTS_DIR" --exclude="outputs" . "$BRANCH_TEST_PATH/"
    mkdir -p "$BRANCH_TEST_PATH/$SUBTESTS_DIR"
    PARENT_OUTPUTS_DIR="$(pwd)/outputs/$BRANCH_TEST_NAME"
    mkdir -p "$PARENT_OUTPUTS_DIR"
    ln -s "$PARENT_OUTPUTS_DIR" "$BRANCH_TEST_PATH/outputs"

    SUFFIX=$(printf "\\$(printf '%03o' $((97 + EXISTING_SUBTESTS_COUNT)))")
    BRANCH_TEST_ID="${PARENT_TEST_ID}${SUFFIX}"

    METADATA_FILE="$BRANCH_TEST_PATH/metadata.yaml"
    if [[ -f "$METADATA_FILE" ]]; then
        yq eval ".test_name = \"$BRANCH_TEST_NAME\"" -i "$METADATA_FILE"
        yq eval ".parent_test = \"$PARENT_TEST_NAME\"" -i "$METADATA_FILE"
        yq eval ".test_id = \"$BRANCH_TEST_ID\"" -i "$METADATA_FILE"
    else
        [[ "$QUIET" == false ]] && echo "Error: Failed to update metadata.yaml."
        exit 1
    fi

    if [[ "$QUIET" == false ]]; then
        echo "Branch test '$BRANCH_TEST_NAME' created."
        echo "Outputs stored in: $PARENT_OUTPUTS_DIR"
        echo "Branch test ID: $BRANCH_TEST_ID"
    fi
}

ROOT_DIR=$(get_root_dir)
add_branch
