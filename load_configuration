#!/bin/bash

# --- Defaults ---
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
CONFIG_FILE="$SCRIPT_DIR/Configs/config_map.yaml"
TEST_DIR="test"
FORCE=false      # Default: don't overwrite

# --- Functions ---

# Function to get a value from the YAML file using yq
get_yaml_value() {
  yq -r ".$2" "$1"
}

# --- Defaults ---
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
CONFIG_FILE="$SCRIPT_DIR/Configs/config_map.yaml"
TEST_DIR="test"
FORCE=false      # Default: don't overwrite

# --- Functions ---

# Function to get a value from the YAML file using yq
get_yaml_value() {
  yq -r ".$2" "$1"
}

# Load Configuration
# Determine the script's directory
SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# Read file types from the configuration file (config_map.yaml).
FILE_TYPES=$(yq e '.FileTypes | keys | .[]' "$CONFIG_FILE")

# Load Resolutions into an associative array
declare -A Resolutions
while IFS=':' read -r key value; do
    Resolutions["$key"]="$value"
done < <(yq e '.Resolutions | to_entries | .[] | .key + ":" + (.value | to_json)' "$CONFIG_FILE")

# Load InitialConditions into an associative array
declare -A InitialConditions
while IFS=':' read -r key value; do
    InitialConditions["$key"]="$value"
done < <(yq e '.InitialConditions | to_entries | .[] | .key + ":" + (.value | to_json)' "$CONFIG_FILE")

# Load Diffusion into an associative array
declare -A Diffusion
while IFS=':' read -r key value; do
    Diffusion["$key"]="$value"
done < <(yq e '.Diffusion | to_entries | .[] | .key + ":" + (.value | to_json)' "$CONFIG_FILE")

# Function to prompt user for configuration options
prompt_config() {
    local resolution
    local bio_physics
    local init_config
    local diffusion

    # Prompt for resolution
    select resolution in "${!Resolutions[@]}"; do
        if [[ -n "$resolution" ]]; then
            echo "Selected resolution: $resolution"
            break
        else
            echo "Invalid selection. Please try again."
        fi
    done

    # Prompt for Bio or Physics
    select bio_physics in "biology" "physics"; do
        if [[ -n "$bio_physics" ]]; then
            echo "Selected Bio/Physics: $bio_physics"
            break
        else
            echo "Invalid selection. Please try again."
        fi
    done

    # Prompt for Initial Condition Config
    select init_config in "${!InitialConditions[@]}"; do
        if [[ -n "$init_config" ]]; then
            echo "Selected Initial Condition Config: $init_config"
            break
        else
            echo "Invalid selection. Please try again."
        fi
    done

    # Prompt for Diffusion Settings
    select diffusion in "${!Diffusion[@]}"; do
        if [[ -n "$diffusion" ]]; then
            echo "Selected Diffusion: $diffusion"
            break
        else
            echo "Invalid selection. Please try again."
        fi
    done

    echo "Resolution: $resolution"
    echo "Bio/Physics: $bio_physics"
    echo "Initial Condition Config: $init_config"
    echo "Diffusion: $diffusion"
}
